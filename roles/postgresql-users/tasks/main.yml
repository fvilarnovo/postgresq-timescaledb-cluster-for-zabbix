---

- name: Make sure other PostgreSQL users are present (if any)
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    encrypted: true
    role_attr_flags: "{{ item.flags }}"
    login_host: "127.0.0.1"
    login_port: "{{ postgresql_port }}"
    login_user: "{{ patroni_superuser_username }}"
    login_password: "{{ patroni_superuser_password }}"
    login_db: "postgres"
    state: present
  loop: "{{ postgresql_users | flatten(1) }}"
  loop_control:
    label: "{{ item.name }}"
  when: postgresql_users is defined and postgresql_users | length > 0 and item.name != zabbix_username
  tags: postgresql_users

- name: Create or Update Zabbix monitoring user
  become: true
  become_user: postgres
  community.postgresql.postgresql_query:
    db: postgres
    login_host: "127.0.0.1"
    login_port: "{{ postgresql_port }}"
    login_user: "{{ patroni_superuser_username }}"
    login_password: "{{ patroni_superuser_password }}"
    query: |
      DO
      $do$
      BEGIN
         IF NOT EXISTS (
            SELECT FROM pg_catalog.pg_roles
            WHERE  rolname = '{{ zabbix_username }}') THEN

            CREATE ROLE {{ zabbix_username }} WITH LOGIN PASSWORD '{{ zabbix_password }}';
         ELSE
            ALTER ROLE {{ zabbix_username }} WITH LOGIN PASSWORD '{{ zabbix_password }}';
         END IF;
      END
      $do$;
      GRANT pg_monitor TO {{ zabbix_username }};
  when: zabbix_user_create | default(false)
  tags: postgresql_users, zabbix_user